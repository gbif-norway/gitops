apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "publishgpt.fullname" . }}-backend
  labels:
    {{- include "publishgpt.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
spec:
  {{- if not .Values.backEnd.autoscaling.enabled }}
  replicas: {{ .Values.backEnd.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "publishgpt.backendSelectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.backEnd.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "publishgpt.labels" . | nindent 8 }}
        app.kubernetes.io/component: backend
        {{- with .Values.backEnd.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.backEnd.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.backEnd.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-backend
          securityContext:
            {{- toYaml .Values.backEnd.securityContext | nindent 12 }}
          image: "{{ .Values.backEnd.image.repository }}{{- if .Values.backEnd.image.tag }}:{{ .Values.backEnd.image.tag }}{{- end }}"
          imagePullPolicy: {{ .Values.backEnd.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.backEnd.service.targetPort }}
              protocol: TCP
          env:
            - name: ALLOWED_HOSTS
              value: {{ range $index, $host := .Values.backEnd.ingress.hosts }}{{ if $index }},{{ end }}{{ $host.host }}{{ end }}
          envFrom:
            - secretRef:
                name: {{ .Values.backEnd.secretRef.name }}
          resources:
            {{- toYaml .Values.backEnd.resources | nindent 12 }}
